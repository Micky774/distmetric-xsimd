{{py:

implementation_specific_values = [
    # Values are the following ones:
    #
    #       name_suffix, INPUT_DTYPE_t, INPUT_DTYPE
    #
    # On the first hand, an empty string is used for `name_suffix`
    # for the float64 case as to still be able to expose the original
    # float64 implementation under the same API, namely `DistanceMetric`.
    #
    # On the other hand, '32' bit is used for `name_suffix` for the float32
    # case to remove ambiguity and use `DistanceMetric32`, which is not
    # publicly exposed.
    #
    # The metric mapping is adapted accordingly to route to the correct
    # implementations.
    #
    ('', 'float64_t', 'np.float64'),
    ('32', 'float32_t', 'np.float32')
]

}}

from sklearn.utils._typedefs cimport float64_t, float32_t, int32_t, intp_t

cdef extern from "src/_dist_optim.cpp":
    cdef bint HAS_SIMD
    cdef Type xsimd_manhattan_dist[Type](Type * x, Type * y, intp_t size) nogil
    cdef Type xsimd_euclidean_rdist[Type](Type * x, Type * y, intp_t size) nogil
    cdef Type dispatched_xsimd_manhattan_dist[Type](Type * x, Type * y, intp_t size) nogil
