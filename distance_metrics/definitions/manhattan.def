SETUP
batch_type sum_##ITER = batch_type::broadcast((Type) 0.);

BODY
batch_type simd_x_##ITER = batch_type::load(&a[idx + inc * ITER], xs::unaligned_mode{}); \
batch_type simd_y_##ITER = batch_type::load(&b[idx + inc * ITER], xs::unaligned_mode{}); \
sum_##ITER += xs::fabs(simd_x_##ITER - simd_y_##ITER);

REMAINDER
// Reduction
sum_0 += sum_1;
batch_type batch_sum = xs::reduce_add(sum_0);
double scalar_sum = *(Type*)&batch_sum;

// Remaining part that cannot be vectorize
REMAINDER_LOOP(scalar_sum += fabs(a[idx] - b[idx]);)
return (Type) scalar_sum;
