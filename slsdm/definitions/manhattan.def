DIST_TYPE
dist

N_UNROLL
2

SETUP_UNROLL
batch_type simd_x_##ITER;
batch_type simd_y_##ITER;
batch_type sum_##ITER = batch_type::broadcast((Type) 0.);

BODY
simd_x_##ITER = batch_type::load_unaligned(&a[idx + inc * ITER]);
simd_y_##ITER = batch_type::load_unaligned(&b[idx + inc * ITER]);
sum_##ITER += xs::fabs(simd_x_##ITER - simd_y_##ITER);

REDUCTION
// Reduction
sum_0 += sum_1;
batch_type batch_sum = xs::reduce_add(sum_0);
double scalar_sum = *(Type*)&batch_sum;

REMAINDER
scalar_sum += fabs(a[idx] - b[idx]);

OUT
return (Type) scalar_sum;
